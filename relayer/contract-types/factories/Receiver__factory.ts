/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from '@ethersproject/providers'
import { Contract, type Signer, utils } from 'ethers'
import type { Receiver, ReceiverInterface } from '../Receiver'

const _abi = [
  {
    type: 'fallback',
    stateMutability: 'payable',
  },
  {
    type: 'receive',
    stateMutability: 'payable',
  },
] as const

export class Receiver__factory {
  static readonly abi = _abi
  static createInterface(): ReceiverInterface {
    return new utils.Interface(_abi) as ReceiverInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Receiver {
    return new Contract(address, _abi, signerOrProvider) as Receiver
  }
}
