/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC721, MockERC721Interface } from "../MockERC721";

const _abi = [
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "name_",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol_",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "_owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "_owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "_from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60808060405234601557610e4d908161001a8239f35b5f80fdfe6080604090808252600480361015610015575f80fd5b5f3560e01c91826301ffc9a714610a385750816306fdde031461098b578163081812fc1461095d578163095ea7b3146108ae57816323b872dd1461089c57816342842e0e146107e25781634cd88b76146104b05781636352211e1461044457816370a08231146103d457816395d89b41146102ed578163a22cb4651461026e578163b88d4fde1461014a57508063c87b56dd1461010b5763e985e9c5146100ba575f80fd5b346101075780600319360112610107576020906100d5610ac6565b6100dd610adc565b9060018060a01b038091165f5260058452825f2091165f52825260ff815f20541690519015158152f35b5f80fd5b50346101075760203660031901126101075780519060208252816060518060208301528060808484015e5f828201840152601f01601f19168101030190f35b9050608036600319011261010757610160610ac6565b90610169610adc565b60443560643567ffffffffffffffff811161010757366023820112156101075761019c9036906024818701359101610b5d565b916101a8828287610c36565b803b159485156101be575b6101bc86610dd8565b005b6020939495505f60018060a01b0380926102078a5198899788968794630a85bd0160e11b9d8e875233908701521660248501526044840152608060648401526084830190610aa2565b0393165af1908115610264576101bc93505f91610235575b506001600160e01b031916145f808080806101b3565b610257915060203d60201161025d575b61024f8183610b27565b810190610db8565b5f61021f565b503d610245565b83513d5f823e3d90fd5b8234610107578060031936011261010757610287610ac6565b906024359081151580920361010757335f526005602052805f209260018060a01b031692835f52602052805f2060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b8234610107575f366003190112610107578051905f90826001926001549361031485610bc1565b90818452602095866001821691825f146103b2575050600114610357575b50506103539291610344910385610b27565b51928284938452830190610aa2565b0390f35b9085925060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f925b82841061039a5750505082010181610344610332565b8054848a018601528895508794909301928101610384565b60ff19168682015292151560051b850190920192508391506103449050610332565b8234610107576020366003190112610107576001600160a01b036103f6610ac6565b16801561041257602092505f5260038252805f20549051908152f35b815162461bcd60e51b8152602081850152600c60248201526b5a45524f5f4144445245535360a01b6044820152606490fd5b9050346101075760203660031901126101075780355f9081526002602052829020546001600160a01b0316908115610480575060209151908152f35b606490602084519162461bcd60e51b8352820152600a6024820152691393d517d3525395115160b21b6044820152fd5b823461010757806003193601126101075767ffffffffffffffff8235818111610107576104e09036908501610ba3565b92602435828111610107576104f89036908301610ba3565b9260ff600654166107a95750835182811161079657806105185f54610bc1565b95601f9687811161072b575b506020908783116001146106aa575f9261069f575b50508160011b915f199060031b1c1916175f555b825191821161068c57506001916105648354610bc1565b84811161062a575b5060209382116001146105b157928192935f926105a6575b50505f19600383901b1c191690821b1781555b60ff1960065416176006555f80f35b015190508380610584565b601f19821693835f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f5b8681106106145750838596106105fc575b505050811b018155610597565b01515f1960f88460031b161c191690558380806105ef565b81830151845592850192602092830192016105de565b835f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68580850160051c82019260208610610683575b0160051c019084905b82811061067857505061056c565b5f815501849061066a565b92508192610661565b604190634e487b7160e01b5f525260245ffd5b015190508680610539565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639350601f198516905b81811061071357509084600195949392106106fb575b505050811b015f5561054d565b01515f1960f88460031b161c191690558680806106ee565b929360206001819287860151815501950193016106d8565b9091505f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638780850160051c8201926020861061078d575b9085949392910160051c01905b81811061077f5750610524565b5f8155849350600101610772565b92508192610765565b604182634e487b7160e01b5f525260245ffd5b906020606492519162461bcd60e51b835282015260136024820152721053149150511657d253925512505312569151606a1b6044820152fd5b90506107ed36610af2565b906107fb8282859695610c36565b803b1593841561080f575b6101bc85610dd8565b60209293945060a4905f60018060a01b03809489519788968795630a85bd0160e11b9b8c88523390880152166024860152604485015260806064850152826084850152165af1908115610264576101bc93505f9161087d575b506001600160e01b031916145f808080610806565b610896915060203d60201161025d5761024f8183610b27565b5f610868565b6101bc6108a836610af2565b91610c36565b905081600319360112610107576108c3610ac6565b9060243592835f52600260205260018060a01b039081815f20541692833314801561093a575b6108f290610bf9565b855f526020525f20921691826bffffffffffffffffffffffff60a01b8254161790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a4005b50835f526005602052815f20335f526020526108f260ff835f20541690506108e9565b82346101075760203660031901126101075781602092355f52825260018060a01b03815f2054169051908152f35b8234610107575f366003190112610107578051905f90825f54926109ae84610bc1565b808352602094600190866001821691825f146103b25750506001146109df5750506103539291610344910385610b27565b5f80805286935091907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610a205750505082010181610344610332565b8054848a018601528895508794909301928101610a0a565b903461010757602036600319011261010757359063ffffffff60e01b8216809203610107576020916301ffc9a760e01b8114908115610a91575b8115610a80575b5015158152f35b635b5e139f60e01b14905083610a79565b6380ac58cd60e01b81149150610a72565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361010757565b602435906001600160a01b038216820361010757565b6060906003190112610107576001600160a01b0390600435828116810361010757916024359081168103610107579060443590565b90601f8019910116810190811067ffffffffffffffff821117610b4957604052565b634e487b7160e01b5f52604160045260245ffd5b92919267ffffffffffffffff8211610b495760405191610b87601f8201601f191660200184610b27565b829481845281830111610107578281602093845f960137010152565b9080601f8301121561010757816020610bbe93359101610b5d565b90565b90600182811c92168015610bef575b6020831014610bdb57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610bd0565b15610c0057565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b825f5260206002815260018060a01b03926040908480835f2054169416938403610d87578416938415610d4f57610c7f90843314908115610d31575b8115610d1b575b50610bf9565b825f5260038252805f208054908115610d07575f198092019055845f5260038352815f20908154908114610d07576001019055845f52600282526004815f20926bffffffffffffffffffffffff60a01b938685825416179055525f209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4565b634e487b7160e01b5f52601160045260245ffd5b9050865f5260048452825f20541633145f610c79565b9050845f5260058452825f20335f52845260ff835f20541690610c72565b815162461bcd60e51b81526004810184905260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b815162461bcd60e51b815260048101849052600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b9081602091031261010757516001600160e01b0319811681036101075790565b15610ddf57565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fdfea2646970667358221220046d701a354daf3a0dd56402b50cf0cbeb3a977a333e28a596407ec90509c97c64736f6c63430008190033";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockERC721> {
    return super.deploy(overrides || {}) as Promise<MockERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  override connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
