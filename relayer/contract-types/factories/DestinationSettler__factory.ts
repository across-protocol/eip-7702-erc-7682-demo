/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DestinationSettler,
  DestinationSettlerInterface,
} from "../DestinationSettler";

const _abi = [
  {
    type: "function",
    name: "fill",
    inputs: [
      {
        name: "orderId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "originData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fillStatuses",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Executed",
    inputs: [
      {
        name: "orderId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DuplicateFill",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidExecutionChainId",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidOrderId",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidUserSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6080806040523460195760015f5561130a908161001e8239f35b5f80fdfe6080604052600480361015610012575f80fd5b5f3560e01c90816382e2c43f14610037575063c35c83fc14610032575f80fd5b61020c565b346101ad5760603660031901126101ad578035906001600160401b036024358181116101ad5761006a90369084016101df565b90916044359081116101ad5761008390369085016101df565b505060025f54146101cf579061009f9160025f558101906104cd565b90826100aa836106b1565b036101c0576100cb6100c4845f52600160205260405f2090565b5460ff1690565b6101b1576100f16100e4845f52600160205260405f2090565b805460ff19166001179055565b6100fa826106da565b61010382610897565b81516101279061011b9081906001600160a01b031681565b6001600160a01b031690565b91823b156101ad57610150925f9283604051809681958294630a2d1fe160e11b84528301610620565b03925af180156101a85761018f575b507fa74c8847d513feba22a0f0cb38d53081abf97562cdb293926ba243689e7c41ca5f80a261018d60015f55565b005b8061019c6101a29261024f565b80610572565b8161015f565b6106a6565b5f80fd5b604051635256551f60e01b8152fd5b604051635d70603360e01b8152fd5b82633ee5aeb560e01b6080526080fd5b9181601f840112156101ad578235916001600160401b0383116101ad57602083818601950101116101ad57565b346101ad5760203660031901126101ad576004355f526001602052602060ff60405f2054166040519015158152f35b634e487b7160e01b5f52604160045260245ffd5b6001600160401b03811161026257604052565b61023b565b604081019081106001600160401b0382111761026257604052565b606081019081106001600160401b0382111761026257604052565b608081019081106001600160401b0382111761026257604052565b60a081019081106001600160401b0382111761026257604052565b60c081019081106001600160401b0382111761026257604052565b90601f801991011681019081106001600160401b0382111761026257604052565b6040519061031c826102d3565b565b6040519061031c82610282565b6040519061031c8261029d565b35906001600160a01b03821682036101ad57565b91908260409103126101ad5760405161036481610267565b602080829461037281610338565b84520135910152565b35906001600160401b03821682036101ad57565b6001600160401b03811161026257601f01601f191660200190565b81601f820112156101ad578035906103c18261038f565b926103cf60405194856102ee565b828452602083830101116101ad57815f926020809301838601378301015290565b6001600160401b0381116102625760051b60200190565b9080601f830112156101ad57813591602091610422846103f0565b9360409261043360405196876102ee565b818652848087019260051b820101938385116101ad57858201925b85841061045f575050505050505090565b6001600160401b0384358181116101ad57840191606080601f19858a0301126101ad5784519061048e82610282565b6104998b8601610338565b8252858501359384116101ad57846104b88a8d809897819801016103aa565b8584015201358582015281520193019261044e565b906020828203126101ad5781356001600160401b03928382116101ad57019060e0828203126101ad576104fe61030f565b9261050883610338565b845260208301356020850152610521826040850161034c565b60408501526105326080840161037b565b606085015260a08301358181116101ad578261054f9185016103aa565b608085015260c08301359081116101ad5761056a9201610407565b60a082015290565b5f9103126101ad57565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b908082519081815260208091019281808460051b8301019501935f915b8483106105cd5750505050505090565b9091929394958480600192601f198582030186528951906106066060868060a01b0384511683528484015190808685015283019061057c565b9160408091015191015298019301930191949392906105bd565b906106a39160208152602060018060a01b038084511682840152818401516040840152604084015190815116606084015201516080820152610672606083015160a08301906001600160401b03169052565b60a061068e608084015160e060c085015261010084019061057c565b9201519060e0601f19828503019101526105a0565b90565b6040513d5f823e3d90fd5b6040516106d4816106c6602082019485610620565b03601f1981018352826102ee565b51902090565b60205f60408301518260018060a01b038083511695511691015160405190848201926323b872dd60e01b84523360248401526044830152606482015260648152610723816102b8565b519082855af1156106a6575f513d6107595750803b155b6107415750565b60249060405190635274afe760e01b82526004820152fd5b6001141561073a565b9060209182818303126101ad578051906001600160401b0382116101ad570181601f820112156101ad57805192610798846103f0565b936040936107a8855196876102ee565b818652828087019260071b850101938185116101ad578301915b8483106107d25750505050505090565b828203608081126101ad578651906107e982610282565b84518252858501519060028210156101ad57889187840152603f1901126101ad576080918591885161081a81610267565b898701518152606087015184820152898201528152019201916107c2565b634e487b7160e01b5f52603260045260245ffd5b80518210156108605760209160051b010190565b610838565b908160209103126101ad575190565b805191908290602001825e015f815290565b6020906106a3939281520190610874565b6060810151466001600160401b03909116036109fe5780516108c59061011b9081906001600160a01b031681565b60405163042a18a360e31b8152915f83600481855afa9081156101a8576004935f926109da575b506020610920608083019361091a6109116109078751610b56565b5163ffffffff1690565b63ffffffff1690565b9061084c565b51936040519586809263057ff68760e51b82525afa9081156101a85761031c945f9261099d575b506109926109616109869260405191829160208301610620565b0390610975601f19928381018352826102ee565b604051938491602083019687610886565b039081018352826102ee565b519020905190610c00565b6109869192506109616109ca6109929260203d6020116109d3575b6109c281836102ee565b810190610865565b93925050610947565b503d6109b8565b6109f79192503d805f833e6109ef81836102ee565b810190610762565b905f6108ec565b6040516319c1be4360e11b8152600490fd5b6040519061f04082018281106001600160401b038211176102625760405261f00d825261f020366020840137565b519081151582036101ad57565b929192610a578261038f565b91610a6560405193846102ee565b8294818452818301116101ad578281602093845f96015e010152565b9080601f830112156101ad5781516106a392602001610a4b565b906020828203126101ad5781516001600160401b03928382116101ad5701908181039260c084126101ad5760405193610ad38561029d565b83519063ffffffff821682036101ad576060918652601f1901126101ad57604051610afd81610282565b6020840151815260408401516020820152606084015160ff811681036101ad5760408201526020850152610b3360808401610a3e565b604085015260a08301519081116101ad57610b4e9201610a81565b606082015290565b604090815191610b658361029d565b5f83526060806020948351610b7981610282565b5f81525f878201525f85820152868201525f8482015201526041825114610bac5750816106a39282518301019101610a9b565b5f90610bdd8484015193606083820151910151841a60f81c90610bcd61031e565b9586528686015260ff1682850152565b610be5610a10565b92610bee61032b565b94838652850152830152606082015290565b6001600160e01b031992610c15929091610d0d565b1615610c1d57565b604051638baa579f60e01b8152600490fd5b60021115610c3957565b634e487b7160e01b5f52602160045260245ffd5b519061ffff821682036101ad57565b906020828203126101ad5781516001600160401b03928382116101ad57019060a0828203126101ad5760405192610c92846102b8565b82518181116101ad5782610ca7918501610a81565b845260208301519081116101ad5782019181601f840112156101ad57610cd8608092846020610d0596519101610a4b565b6020850152610ce960408201610c4d565b6040850152610cfa60608201610c4d565b606085015201610a3e565b608082015290565b90610d1790610b56565b91610d256040840151151590565b610df6575b80518015159081610dec575b50610d7a57602081018051610d4a81610c2f565b610d5381610c2f565b1580610dd2575b610dc25760019051610d6b81610c2f565b610d7481610c2f565b14610d81575b5050505f90565b8260406020610d9f6060610dab970151828082518301019101610c5c565b92015192015192610fb3565b610db7575f8080610d7a565b630b135d3f60e11b90565b50630b135d3f60e11b9392505050565b50610de7602085015160408401519085610e66565b610d5a565b905042115f610d36565b905f610e226106c6610e1660209460405192839187830160209181520190565b60405191828092610874565b039060025afa156101a8575f5190610d2a565b8051601f101561086057603f0190565b8051602010156108605760400190565b908151811015610860570160200190565b5f9291839260208251920151906020815191015191604051936020850195865260408501526060840152608083015260a082015260a08152610ea7816102d3565b519060145afa3d15610f21573d610ebd8161038f565b90610ecb60405192836102ee565b81523d5f602083013e5b81610f15575b81610ee4575090565b600160f81b91506001600160f81b031990610f1090610f0290610e35565b516001600160f81b03191690565b161490565b80516020149150610edb565b6060610ed5565b60405190610f3582610267565b6015825274113a3cb832911d113bb2b130baba34371733b2ba1160591b6020830152565b9061031c6001610f89936040519485916c1131b430b63632b733b2911d1160991b6020840152602d830190610874565b601160f91b815203601e198101855201836102ee565b610fac9060209392610874565b9081520190565b90929192805160258151109081156110c6575b506110be57610fd3610f28565b611003610fff60208401928351610ff9610ff2606088015161ffff1690565b61ffff1690565b91611178565b1590565b6110b55761105c610fff61104861104361102a966040519788916020830160209181520190565b039661103e601f19988981018352826102ee565b6111e7565b610f59565b8351610ff9610ff2604088015161ffff1690565b6110b5575f6110746020925160405191828092610874565b039060025afa156101a85761109f5f91610e1660209484519251610986604051948592898401610f9f565b039060025afa156101a8576106a3915f51610e66565b50505050505f90565b505050505f90565b6110e791506110da610f02610fff92610e45565b60808401511515906110ed565b5f610fc6565b906001600160f81b0319600160f81b8316016111515780611141575b61113c57601f60fb1b600160fb1b821601611125575b50600190565b600160fc1b90811614611138575f61111f565b5f90565b505f90565b50600160fa1b8181161415611109565b50505f90565b9190820180921161116457565b634e487b7160e01b5f52601160045260245ffd5b919082519281515f5b85811061119357505050505050600190565b8161119e8287611157565b10156111dd576001600160f81b0319806111b88386610e55565b5116906111ce6111c88489611157565b87610e55565b5116036111dd57600101611181565b5050505050505f90565b805160609291816111f6575050565b9092506003906002916003600286010460021b91604051957f4142434445464748494a4b4c4d4e4f505152535455565758595a616263646566601f52603f947f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f603f5260208801858901946020860197602085870101936004838651985f88525b0194838651818160121c16515f538181600c1c1651600153818160061c16518553165185535f51815201938a8510156112b4576004908490611277565b5050505095505f936003936040925201604052066002048093035203825256fea26469706673582212207770a216ceb0bb94d651779e9aaa364c4c6517a6b823915d6263e694a721cd1b64736f6c63430008190033";

type DestinationSettlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationSettlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationSettler__factory extends ContractFactory {
  constructor(...args: DestinationSettlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DestinationSettler> {
    return super.deploy(overrides || {}) as Promise<DestinationSettler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DestinationSettler {
    return super.attach(address) as DestinationSettler;
  }
  override connect(signer: Signer): DestinationSettler__factory {
    return super.connect(signer) as DestinationSettler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationSettlerInterface {
    return new utils.Interface(_abi) as DestinationSettlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DestinationSettler {
    return new Contract(address, _abi, signerOrProvider) as DestinationSettler;
  }
}
